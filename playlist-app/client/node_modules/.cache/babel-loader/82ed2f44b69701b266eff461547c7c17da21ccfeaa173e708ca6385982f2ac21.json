{"ast":null,"code":"var _jsxFileName = \"/Users/sahil/Documents/PycharmProjects/playlist-generator/playlist-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Button, Row, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"95b30e78e5be4447b7502fa053575c29\";\nconst CLIENT_SECRET = \"ac4c081390764e8aa49e5b557da4621d\";\nfunction SpotifyPlayer({\n  track_id\n}) {\n  const embedUrl = `https://open.spotify.com/embed/track/${track_id}`;\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    src: embedUrl,\n    width: \"300\",\n    height: \"80\",\n    frameBorder: \"0\",\n    allow: \"encrypted-media\",\n    title: \"Spotify Player\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = SpotifyPlayer;\nexport default function App() {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [mood, setMood] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const authParameters = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: \"grant_type=client_credentials&client_id=\" + CLIENT_ID + \"&client_secret=\" + CLIENT_SECRET\n    };\n    fetch(\"https://accounts.spotify.com/api/token\", authParameters).then(result => result.json()).then(data => setAccessToken(data.access_token));\n  }, []);\n  const handleSelectChange = e => {\n    setMood(e.target.value);\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/submit\", {\n        mood\n      });\n      console.log(response.data.message);\n      const searchParameters = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${accessToken}`\n        }\n      };\n      const returnedTracks = fetch(\"https://api.spotify.com/v1/tracks/?ids=\" + response.data.message.join(), searchParameters).then(result => result.json()).then(data => {\n        console.log(data);\n        setPlaylist(data.tracks);\n      });\n      setError(false);\n    } catch (error) {\n      console.error(\"Error sending data to Flask:\", error);\n      setError(true);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Playlist Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: mood,\n        onChange: handleSelectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"energetic\",\n          children: \"Energetic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sad\",\n          children: \"Sad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nostalgic\",\n          children: \"Nostalgic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"romantic\",\n          children: \"Romantic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"chill\",\n          children: \"Chill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"intense\",\n          children: \"Intense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Couldn't connect to Flask server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-2 row row-cols-4\",\n        children: playlist.map((track, i) => {\n          console.log(track);\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              src: track.album.images[0].url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [track.name, \" by \", track.artists.map(artist => artist.name).join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n              track_id: track.uri\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jFS6R6ibKkIvUVKCV7J+GDTYoeA=\");\n_c2 = App;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpotifyPlayer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Button","Row","Card","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","SpotifyPlayer","track_id","embedUrl","src","width","height","frameBorder","allow","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","accessToken","setAccessToken","mood","setMood","playlist","setPlaylist","error","setError","authParameters","method","headers","body","fetch","then","result","json","data","access_token","handleSelectChange","e","target","value","handleSubmit","response","post","console","log","message","searchParameters","returnedTracks","join","tracks","className","children","onChange","disabled","onClick","map","track","i","Img","album","images","url","Body","Title","name","artists","artist","uri","_c2","$RefreshReg$"],"sources":["/Users/sahil/Documents/PycharmProjects/playlist-generator/playlist-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Button, Row, Card } from \"react-bootstrap\";\n\nconst CLIENT_ID = \"95b30e78e5be4447b7502fa053575c29\";\nconst CLIENT_SECRET = \"ac4c081390764e8aa49e5b557da4621d\";\n\nfunction SpotifyPlayer({ track_id }) {\n  const embedUrl = `https://open.spotify.com/embed/track/${track_id}`;\n    return (\n        <iframe\n            src={embedUrl}\n            width=\"300\"\n            height=\"80\"\n            frameBorder=\"0\"\n            allow=\"encrypted-media\"\n            title=\"Spotify Player\"\n        ></iframe>\n    );\n}\n\nexport default function App() {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [mood, setMood] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const authParameters = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: \"grant_type=client_credentials&client_id=\" + CLIENT_ID + \"&client_secret=\" + CLIENT_SECRET\n    }\n\n    fetch(\"https://accounts.spotify.com/api/token\", authParameters)\n      .then(result => result.json())\n      .then(data => setAccessToken(data.access_token));\n  }, []);\n\n  const handleSelectChange = (e) => {\n    setMood(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/submit\", {mood});\n      console.log(response.data.message);\n      const searchParameters = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${accessToken}`\n        }\n      };\n      const returnedTracks = fetch(\"https://api.spotify.com/v1/tracks/?ids=\" + response.data.message.join(), searchParameters)\n        .then(result => result.json())\n        .then(data => {\n          console.log(data)\n          setPlaylist(data.tracks)\n        });\n      setError(false);\n    } catch(error) {\n      console.error(\"Error sending data to Flask:\", error);\n      setError(true);\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1>Playlist Generator</h1>\n        <select value={mood} onChange={handleSelectChange}>\n          <option value=\"\" disabled>Select a mood</option>\n          <option value=\"energetic\">Energetic</option>\n          <option value=\"sad\">Sad</option>\n          <option value=\"nostalgic\">Nostalgic</option>\n          <option value=\"romantic\">Romantic</option>\n          <option value=\"chill\">Chill</option>\n          <option value=\"intense\">Intense</option>\n        </select>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </Container>\n      <Container>\n        {error ? (\n          <p>Couldn't connect to Flask server.</p>\n        ) : (\n          <Row className=\"mx-2 row row-cols-4\">\n            {playlist.map((track, i) => {\n              console.log(track);\n              return (\n                <Card>\n                  <Card.Img src={track.album.images[0].url} />\n                  <Card.Body>\n                    <Card.Title>{track.name} by {track.artists.map(artist => artist.name).join(\", \")}</Card.Title>\n                  </Card.Body>\n                  <SpotifyPlayer track_id={track.uri}/>\n                </Card>\n              )\n            })}\n          </Row>\n        )}\n      </Container>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}